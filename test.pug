//--------------------------------------------------
// Attributes
//--------------------------------------------------

a(href='google.com') Google
a(class='button' href='google.com') Google
a(class='button', href='google.com') Google

- var authenticated = true
body(class=authenticated ? 'authed' : 'anon')

//--------------------------------------------------
// Multiline Attributes

input(
  type='checkbox'
  name='agreement'
  checked
)

input(data-json=`
  {
    "very-long": "piece of ",
    "data": true
  }
`)

//--------------------------------------------------
// Quoted Attributes

div(class='div-class', (click)='play()')
div(class='div-class' '(click)'='play()')

//--------------------------------------------------
// Attribute Interpolation

- var btnType = 'info'
- var btnSize = 'lg'
button(type='button' class='btn btn-' + btnType + ' btn-' + btnSize)
button(type='button' class=`btn btn-${btnType} btn-${btnSize}`)

//--------------------------------------------------
// Unescaped Attributes

div(escaped="<code>")
div(unescaped!="<code>")

//--------------------------------------------------
// Boolean Attributes

input(type='checkbox' checked)
input(type='checkbox' checked=true)
input(type='checkbox' checked=false)
input(type='checkbox' checked=true.toString())
input(type='checkbox' checked=true && 'checked')

//--------------------------------------------------
// Style Attributes

a(style={color: 'red', background: 'green'})

//--------------------------------------------------
// Class Attributes

- var classes = ['foo', 'bar', 'baz']
a(class=classes)
a.bang(class=classes class=['bing'])

- var currentUrl = '/about'
a(class={active: currentUrl === '/'} href='/') Home
a(class={active: currentUrl === '/about'} href='/about') About

//--------------------------------------------------
// Class Literal

a.button
.content

//--------------------------------------------------
// ID Literal

a#main-link
#content

//--------------------------------------------------
// &attributes

div#foo(data-bar="foo")&attributes({'data-foo': 'bar'})

- var attributes = {};
- attributes.class = 'baz';
div#foo(data-bar="foo")&attributes(attributes)

//--------------------------------------------------
// Case
//--------------------------------------------------

- var friends = 10
case friends
  when 0
    p you have no friends
  when 1
    p you have a friend
  default
    p you have #{friends} friends

//--------------------------------------------------
// Case Fall Through

- var friends = 0
case friends
  when 0
  when 1
    p you have very few friends
  default
    p you have #{friends} friends

- var friends = 0
case friends
  when 0
    - break
  when 1
    p you have very few friends
  default
    p you have #{friends} friends

//--------------------------------------------------
// Block Expansion

- var friends = 1
case friends
  when 0: p you have no friends
  when 1: p you have a friend
  default: p you have #{friends} friends

//--------------------------------------------------
// Code
//--------------------------------------------------

- for (var x = 0; x < 3; x++)
  li item

-
  var list = ["Uno", "Dos", "Tres",
          "Cuatro", "Cinco", "Seis"]
each item in list
  li= item

//--------------------------------------------------
// Buffered Code

p
  = 'This code is <escaped>!'

p= 'This code is' + ' <escaped>!'

//--------------------------------------------------
// Unescaped Buffered Code

p
  != 'This code is <strong>not</strong> escaped!'

p!= 'This code is' + ' <strong>not</strong> escaped!'

//--------------------------------------------------
// Comments

// just some paragraphs
p foo
p bar

//- will not output within markup
p foo
p bar

body
  //
    As much text as you want
    can go here.

// All lines beginning with < are treated as plain text
<!--[if IE 8]>
<html lang="en" class="lt-ie9">
<![endif]-->
<!--[if gt IE 8]><!-->
<html lang="en">
<!--<![endif]-->

//--------------------------------------------------
// Conditionals
//--------------------------------------------------

- var user = { description: 'foo bar baz' }
- var authorised = false
#user
  if user.description
    h2.green Description
    p.description= user.description
  else if authorised
    h2.blue Description
    p.description.
      User has no description,
      why not add one...
  else
    h2.red Description
    p.description User has no description

unless user.isAnonymous
  p You're logged in as #{user.name}

//--------------------------------------------------
// Doctype
//--------------------------------------------------

doctype html

//--------------------------------------------------
// Doctype Shortcuts

<!DOCTYPE html>

<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">

<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">

<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">

//--------------------------------------------------
// Custom Doctypes

doctype html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN"

//--------------------------------------------------
// Extendsâ€”Template Inheritance
//--------------------------------------------------

//- index.pug
extends layout.pug

block title
  title Article Title

block content
  h1 My Article

//- layout.pug
doctype html
html
  head
    block title
      title Default title
  body
    block content

//--------------------------------------------------
// Filters
//--------------------------------------------------

:markdown-it(linkify langPrefix='highlight-')
  # Markdown

  Markdown document with http://links.com and

  ```js
  var codeBlocks;
  ```
script
  :coffee-script
    console.log 'This is coffee script'

//--------------------------------------------------
// Inline Syntax

p
  :markdown-it(inline) **BOLD TEXT**

p.
  In the midst of a large amount of plain
  text, suddenly a wild #[:markdown-it(inline) *Markdown*]
  appeared.

//--------------------------------------------------
// Nested Filters

script
  :cdata-js:babel(presets=['es2015'])
    const myFunc = () => `This is ES2015 in a CD${'ATA'}`;

//--------------------------------------------------
// Custom Filters

p
  :my-own-filter(addStart addEnd)
    Filter
    Body

//--------------------------------------------------
// Includes
//--------------------------------------------------

//- index.pug
doctype html
html
  include includes/head.pug
  body
    h1 My Site
    p Welcome to my super lame site.
    include includes/foot.pug

//- includes/head.pug
head
  title My Site
  script(src='/javascripts/jquery.js')
  script(src='/javascripts/app.js')

//- includes/foot.pug
footer#footer
  p Copyright (c) foobar

//--------------------------------------------------
// Including Plain Text
//--------------------------------------------------

doctype html
html
  head
    style
      include style.css
  body
    h1 My Site
    p Welcome to my super lame site.
    script
      include script.js

//--------------------------------------------------
// Including Filtered Tex

doctype html
html
  head
    title An Article
  body
    include:markdown-it article.md

